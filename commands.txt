Commands to run:

Debugging:

TRAIN:
python email_length.py -p testData/Train -o train_emails_length
python email_process.py -p testData/Train -o train_emails_words
python email_links.py -p testData/Train -o train_emails_links
python email_sender.py -p testData/Train -o train_emails_sender

python build_bigram_feature.py -p trec07p_data/Train -o train_emails
python build_bigram_feature.py -p trec07p_data/Test -o test_emails -v  /train_emails_bigram_vocab_50.txt



TEST:
python email_length.py -p testData/Test -o test_emails_length
python email_process.py -p testData/Test -o test_emails -v train_emails_words_vocab_200.txt
python email_links.py -p testData/Test -o test_emails_links -v train_emails_links_vocab.txt
python email_sender.py -p testData/Test -o test_emails_sender -v train_emails_sender_vocab.txt




COMBINE FILES:
python combine_features.py -p testData/Train -n 'train_emails_words_vocab_200.txt train_emails_length_vocab.txt train_emails_links_vocab.txt train_emails_sender_vocab.txt' -m 'train_emails_words_bag_of_words_200.dat train_emails_length_matrix.dat train_emails_links_matrix.dat train_emails_sender_matrix.dat' -e 80

python combine_features.py -p testData/Test -n 'train_emails_words_vocab_200.txt test_emails_length_vocab.txt train_emails_links_vocab.txt train_emails_sender_vocab.txt' -m 'test_emails_bag_of_words_0.dat test_emails_length_matrix.dat test_emails_links_matrix.dat test_emails_sender_matrix.dat' -e 80

COUNTING SAMPLES:
ls testData/Train/NotSpam/ -1 | wc -l 


CLASSIFICATION:
python classify.py -h // shows the possible flags used to select a classifier.
          // must modify file names if you don’t want to use whole
          // test and training sets.


FEATURE SELECTION:
python feature_selection.py -p testData -f testData/Train/combine_features_nameArray.txt -m testData/Train/combine_features_matrix.dat -t testData/Test/combine_features_matrix.dat -e 80

CLUSTER SPECIFIC COMMANDS:
qsub -cwd -N buildbigram200 python build_bigram_feature.py -p trec07p_data/Train -o train_emails
qsub -cwd -N buildbigramTest python build_bigram_feature.py -p trec07p_data/Test -o test_emails -v  /train_emails_bigram_vocab_200.txt
sub -cwd -N P1bigrams python build_bigram_feature.py -p P1Data/Train -o test_emails -v  /train_emails_bigram_vocab_200.txt
qsub -cwd -o classify_out.txt -e classify_errors -N classify python classify.py -c
qsub -cwd -o variance_out.txt -N variance python calc_feature_var.py
qsub -cwd -o classify_outMNB.txt -N multinomalNB python classify.py -M -s -V 1
qsub -cwd -o classify_outBNB.txt -N bernoulliNB python classify.py -B -s -V 1
qsub -cwd -o classify_outSVM.txt -N SVM python classify.py -S -s -V 1
qsub -cwd -o classify_outNN.txt -N NN python classify.py -N -s -V 1


P1Data (orig) - use the training data as an additional test?
——————
wget http://isun.cs.princeton.edu/P1Data.tar.gz
qsub -cwd -N bagofwordstrain python email_process.py -p P1Data/Train -o train_emails
python email_sender.py -p P1Data/Train -o train_emails_sender
python email_links.py -p P1Data/Train -o train_emails_links
qsub -cwd -N lengthTrain python email_length.py -p P1Data/Train -o train_emails_length
qsub -cwd -N bigramtrainP1 python build_bigram_feature.py -p P1Data/Train -o test_emails -v  /train_emails_bigram_vocab_200.txt
qsub -cwd -N wordstrainP1 python email_process.py -p P1Data/Train -o test_emails -v  /train_emails_vocab_200.txt





Final commands:
python email_length.py -p trec07p_data/Train -o train_emails_length
python email_process.py -p trec07p_data/Train -o train_emails_words
python email_links.py -p trec07p_data/Train -o train_emails_links
python email_sender.py -p trec07p_data/Train -o train_emails_sender
python build_bigram_feature.py -p trec07p_data/Train -o train_emails

python email_length.py -p trec07p_data/Test -o test_emails_length
python email_process.py -p trec07p_data/Test -o test_emails -v train_emails_words_vocab_200.txt
python email_links.py -p trec07p_data/Test -o test_emails_links -v train_emails_links_vocab.txt
python email_sender.py -p trec07p_data/Test -o test_emails_sender -v train_emails_sender_vocab.txt
python build_bigram_feature.py -p trec07p_data/Test -o test_emails -v  /train_emails_bigram_vocab_50.txt

python classify.py -M -s -V 1 // run multinomial NB with variance threshold of 1